---
# This Docker compose file includes:
#   qBittorrent-nox (no GUI, but with webUI)
#   *Arr (Sonarr, Radarr, Readarr, Prowlarr)
#   Jellyfin
#   Jellyseer

# Use docker logs qbittorrent-nox for seeing temporal password on first run
services:
  qbittorrent-nox:
    container_name: qbittorrent-nox
    environment:
      #- PAGID=10000
      #- PGID=1000
      #- PUID=1000
      - QBT_EULA=accept
      - QBT_VERSION=latest
      - QBT_WEBUI_PORT=8080
      - TZ=Europe/Madrid
      #- UMASK=022
    image: qbittorrentofficial/qbittorrent-nox:latest
    ports:
      # for bittorrent traffic
      - 6881:6881/tcp
      - 6881:6881/udp
      # for WebUI
      - 8080:8080/tcp
    read_only: true
    stop_grace_period: 30m
    tmpfs:
      - /tmp
    tty: true
    volumes:
      - ./qbittorrent/config:/config
      - /media/hdd/BolloNAS/Torrents:/downloads
      - /media:/media
    restart: 'unless-stopped'

  ####################################################
  # Arr configuration is extracted from hotio's images
  ####################################################

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr
    ports:
      - "9696:9696"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Madrid
    volumes:
      - ./prowlarr/config:/config
    restart: 'unless-stopped'

  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr
    ports:
      - "7878:7878"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Madrid
    volumes:
      - ./radarr/config:/config
      - ./radarr/data:/data
      - /media:/media
    restart: 'unless-stopped'
    depends_on:
      - qbittorrent-nox

  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr
    ports:
      - "8989:8989"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Madrid
    volumes:
      - ./sonarr/config:/config
      - ./sonarr/config:/data
      - /media:/media
    restart: 'unless-stopped'
    depends_on:
      - qbittorrent-nox

  readarr:
    container_name: readarr
    image: ghcr.io/hotio/readarr
    ports:
      - "8787:8787"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Etc/UTC
    volumes:
      - ./readarr/config:/config
      - ./readar/data:/data
      - /media:/media
    restart: 'unless-stopped'
    depends_on:
      - qbittorrent-nox

  ####################################################
  # End of Arr configuration
  ####################################################

  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin
    user: 1000:1000 # Remember to change using id -u : id -g
    network_mode: 'host'
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - type: bind
        source: /media/hdd/BolloNAS/Jellyfin
        target: /media
      # - /path/to/media2:/media2:ro
    restart: 'unless-stopped'
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - "host.docker.internal:host-gateway"
    devices: # Allow Intel/AMD HW acceleration
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    group_add:
      - 993 # Search for render group id with: cat /etc/group | grep render

  jellyseerr:
    container_name: jellyseerr
    image: fallenbagel/jellyseerr:latest
    environment:
        - LOG_LEVEL=debug
        - TZ=Europe/Madrid
    ports:
        - 5055:5055
    volumes:
        - ./jellyseer/config:/app/config
    restart: unless-stopped
    depends_on:
      - jellyfin
      - sonarr
      - radarr
